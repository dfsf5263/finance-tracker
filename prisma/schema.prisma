generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Source {
  id           String        @id @default(cuid())
  name         String        @unique
  createdAt    DateTime      @default(now()) @map("created_at")
  updatedAt    DateTime      @updatedAt @map("updated_at")
  transactions Transaction[]

  @@map("sources")
}

model User {
  id           String        @id @default(cuid())
  name         String        @unique
  createdAt    DateTime      @default(now()) @map("created_at")
  updatedAt    DateTime      @updatedAt @map("updated_at")
  transactions Transaction[]

  @@map("users")
}

model Category {
  id           String        @id @default(cuid())
  name         String        @unique
  createdAt    DateTime      @default(now()) @map("created_at")
  updatedAt    DateTime      @updatedAt @map("updated_at")
  transactions Transaction[]

  @@map("categories")
}

model TransactionType {
  id           String        @id @default(cuid())
  name         String        @unique
  isOutflow    Boolean       @default(true) @map("is_outflow")
  createdAt    DateTime      @default(now()) @map("created_at")
  updatedAt    DateTime      @updatedAt @map("updated_at")
  transactions Transaction[]

  @@map("transaction_types")
}

model Transaction {
  id              String          @id @default(cuid())
  sourceId        String          @map("source_id")
  userId          String          @map("user_id")
  transactionDate DateTime        @map("transaction_date")
  postDate        DateTime        @map("post_date")
  description     String
  categoryId      String          @map("category_id")
  typeId          String          @map("type_id")
  amount          Decimal         @db.Decimal(10, 2)
  memo            String?
  createdAt       DateTime        @default(now()) @map("created_at")
  updatedAt       DateTime        @updatedAt @map("updated_at")

  source   Source          @relation(fields: [sourceId], references: [id])
  user     User            @relation(fields: [userId], references: [id])
  category Category        @relation(fields: [categoryId], references: [id])
  type     TransactionType @relation(fields: [typeId], references: [id])

  @@map("transactions")
}
