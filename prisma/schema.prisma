generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model TransactionAccount {
  id           String        @id @default(uuid()) @db.Uuid
  name         String        @unique
  createdAt    DateTime      @default(now()) @map("created_at")
  updatedAt    DateTime      @updatedAt @map("updated_at")
  transactions Transaction[]

  @@map("transaction_account")
}

model TransactionUser {
  id           String        @id @default(uuid()) @db.Uuid
  name         String        @unique
  annualBudget Decimal?      @map("annual_budget") @db.Decimal(12, 2)
  createdAt    DateTime      @default(now()) @map("created_at")
  updatedAt    DateTime      @updatedAt @map("updated_at")
  transactions Transaction[]

  @@map("transaction_user")
}

model TransactionCategory {
  id           String        @id @default(uuid()) @db.Uuid
  name         String        @unique
  annualBudget Decimal?      @map("annual_budget") @db.Decimal(12, 2)
  createdAt    DateTime      @default(now()) @map("created_at")
  updatedAt    DateTime      @updatedAt @map("updated_at")
  transactions Transaction[]

  @@map("transaction_category")
}

model TransactionType {
  id           String        @id @default(uuid()) @db.Uuid
  name         String        @unique
  isOutflow    Boolean       @default(true) @map("is_outflow")
  createdAt    DateTime      @default(now()) @map("created_at")
  updatedAt    DateTime      @updatedAt @map("updated_at")
  transactions Transaction[]

  @@map("transaction_type")
}

model Transaction {
  id              String              @id @default(uuid()) @db.Uuid
  accountId       String              @map("account_id") @db.Uuid
  userId          String              @map("user_id") @db.Uuid
  transactionDate DateTime            @map("transaction_date")
  postDate        DateTime            @map("post_date")
  description     String
  categoryId      String              @map("category_id") @db.Uuid
  typeId          String              @map("type_id") @db.Uuid
  amount          Decimal             @db.Decimal(10, 2)
  memo            String?
  createdAt       DateTime            @default(now()) @map("created_at")
  updatedAt       DateTime            @updatedAt @map("updated_at")
  account         TransactionAccount  @relation(fields: [accountId], references: [id])
  category        TransactionCategory @relation(fields: [categoryId], references: [id])
  type            TransactionType     @relation(fields: [typeId], references: [id])
  user            TransactionUser     @relation(fields: [userId], references: [id])

  @@map("transaction")
}
